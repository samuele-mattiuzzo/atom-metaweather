// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";

@mw-color-base: @text-color-info;
@mw-color-bad: @text-color-error;
@mw-color-avg: @text-color-warning;
@mw-color-good: @text-color-success;

@mw-after-font-size: 9px;
@mw-glyph-size: 9px;

@mw-base-url: "https://www.metaweather.com%s";
@mw-assets-url: %(@mw-base-url, "/static/img/weather/%s.svg");

.atom-metaweather {
    color: @text-color;
    .location.title { color: @mw-color-base; }

    .stats {

        span::after { font-size: @mw-after-font-size; }

        /* temperature icon */
        .temperature::after { content: '℃'; }

        /* humidity icon */
        .humidity::after { content: '%'; }

        /* wind icon */
        .wind::after { content: 'mph'; }

        /*
           wind icons
           flipped because the direction identifies where the wind comes from
           and not where it's headed
        */
        .dir-s::after { content: "↑"; }
        .dir-n::after { content: '↓'; }
        .dir-w::after { content: '→'; }
        .dir-e::after { content: '←'; }
        .dir-sw::after { content: '↗'; }
        .dir-se::after { content: '↖'; }
        .dir-nw::after { content: '↘'; }
        .dir-ne::after { content: "↙"; }

        /* predictability icon */
        .predict-bad::after { content: '■'; color: @mw-color-bad; }
        .predict-avg::after { content: '■'; color: @mw-color-avg; }
        .predict-good::after { content: '■'; color: @mw-color-good; }

        /* glyphs */
        .glyph (@name) {
            color: @mw-color-base;
            width: @mw-glyph-size;
            height: @mw-glyph-size;
            background-size: contain;
            display: inline-block;
            content: '';
            @url: %(@mw-assets-url, @name);
            background-image: url(@url);
        }
        .state-sn::after { .glyph('sn'); }
        .state-sl::after { .glyph('sl'); }
        .state-h::after  { .glyph('h');  }
        .state-t::after	 { .glyph('t');  }
        .state-hr::after { .glyph('hr'); }
        .state-lr::after { .glyph('lr'); }
        .state-s::after  { .glyph('s');  }
        .state-hc::after { .glyph('hc'); }
        .state-lc::after { .glyph('lc'); }
        .state-c::after  { .glyph('c');  }

    }

}
